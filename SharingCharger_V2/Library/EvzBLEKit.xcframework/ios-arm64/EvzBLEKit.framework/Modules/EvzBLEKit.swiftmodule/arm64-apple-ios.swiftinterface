// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.1 effective-4.2 (swiftlang-1200.0.41 clang-1200.0.32.8)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 4.2 -enforce-exclusivity=checked -O -module-name EvzBLEKit
import CoreBluetooth
@_exported import EvzBLEKit
import Foundation
import Swift
import SystemConfiguration
import UIKit
public struct EvzBLETagData {
  public let tagNumber: Swift.String
  public let kwh: Swift.String
  public let useTime: Swift.String
  public let plugSttusCode: Swift.String
  public func toString() -> Swift.String
}
public struct DeviceInfo {
}
public enum BleResultCode : Swift.Int {
  case BleAuthorized
  case BleUnAuthorized
  case BleOff
  case BleScan
  case BleNotScanList
  case BleConnect
  case BleDisconnect
  case BleAgainOtpAtuh
  case BleScanFail
  case BleConnectFail
  case BleOtpCreateFail
  case BleOtpAuthFail
  case BleAccessServiceFail
  case BleChargeStart
  case BleChargeStop
  case BleChargeStartFail
  case BleChargeStopFail
  case BleSetTag
  case BleGetTag
  case BleAllDeleteTag
  case BleDeleteTag
  case BleSetTagFail
  case BleWrongTagLength
  case BleGetTagFail
  case BleAllDeleteTagFail
  case BleDeleteTagFail
  case BleNotConnect
  case BleUnknownError
  case BleUnSupport
  case BleUnPlug
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers public class BleManager {
  public static let shared: EvzBLEKit.BleManager
  public func setBleDelegate(delegate: EvzBLEKit.BleDelegate)
  @objc deinit
}
extension BleManager {
  public func hasPermission() -> Swift.Bool
  public func isOnBluetooth() -> Swift.Bool
}
extension BleManager {
  public func bleScan()
  public func bleScanStop()
  public func bleConnect(bleID: Swift.String)
  public func bleDisConnect()
}
extension BleManager {
  public func bleChargerStart(useTime: Swift.String)
  public func bleChargerStop()
  public func bleSetTag(tag: Swift.String)
  public func bleGetTag()
  public func bleDeleteAllTag()
  public func bleDeleteTargetTag(tag: Swift.String)
  public func bleReset()
}
public protocol BleDelegate {
  func bleResult(code: EvzBLEKit.BleResultCode, result: Any?)
}
public enum BleTransferCode : Swift.Int {
  case CHARGER_START
  case CHARGET_STOP
  case SET_TAG
  case GET_TAG
  case DELETE_ALL_TAG
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
public struct EvzBLEData {
  public let bleName: Swift.String
  public let bleAddr: Swift.String
  public let useYN: Swift.String
  public let useTime: Swift.String
  public let setTag: Swift.String
}
extension EvzBLEKit.BleResultCode : Swift.Equatable {}
extension EvzBLEKit.BleResultCode : Swift.Hashable {}
extension EvzBLEKit.BleResultCode : Swift.RawRepresentable {}
extension EvzBLEKit.BleTransferCode : Swift.Equatable {}
extension EvzBLEKit.BleTransferCode : Swift.Hashable {}
extension EvzBLEKit.BleTransferCode : Swift.RawRepresentable {}
